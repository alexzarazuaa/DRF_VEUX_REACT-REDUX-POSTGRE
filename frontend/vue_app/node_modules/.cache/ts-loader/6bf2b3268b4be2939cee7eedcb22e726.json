{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/ts-loader/index.js??ref--14-2!/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/store/auth.module.ts","dependencies":[{"path":"/app/src/store/auth.module.ts","mtime":1613143169147},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKdmFyIF9hY3Rpb25zLCBfbXV0YXRpb25zOwoKaW1wb3J0IEFwaVNlcnZpY2UgZnJvbSAiQC9jb21tb24vYXBpLnNlcnZpY2UiOwppbXBvcnQgSnd0U2VydmljZSBmcm9tICJAL2NvbW1vbi9qd3Quc2VydmljZSI7CmltcG9ydCB7IEFjdGlvbnNUeXBlIH0gZnJvbSAiLi9hY3Rpb25zLnR5cGUiOwppbXBvcnQgeyBNdXRhdGlvbnNUeXBlIH0gZnJvbSAiLi9tdXRhdGlvbnMudHlwZSI7CnZhciBzdGF0ZSA9IHsKICBlcnJvcnM6IG51bGwsCiAgdXNlcjoge30sCiAgaXNBdXRoZW50aWNhdGVkOiAhIUp3dFNlcnZpY2UuZ2V0VG9rZW4oKQp9Owp2YXIgZ2V0dGVycyA9IHsKICBjdXJyZW50VXNlcjogZnVuY3Rpb24gY3VycmVudFVzZXIoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS51c2VyOwogIH0sCiAgaXNBdXRoZW50aWNhdGVkOiBmdW5jdGlvbiBpc0F1dGhlbnRpY2F0ZWQoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5pc0F1dGhlbnRpY2F0ZWQ7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IChfYWN0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIEFjdGlvbnNUeXBlLkxPR0lOLCBmdW5jdGlvbiAoY29udGV4dCwgY3JlZGVudGlhbHMpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgIEFwaVNlcnZpY2UucG9zdCgidXNlcnMvbG9naW4iLCB7CiAgICAgIHVzZXI6IGNyZWRlbnRpYWxzCiAgICB9KS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgIHZhciBkYXRhID0gX3JlZi5kYXRhOwogICAgICBjb250ZXh0LmNvbW1pdChNdXRhdGlvbnNUeXBlLlNFVF9BVVRILCBkYXRhLnVzZXIpOwogICAgICByZXNvbHZlKGRhdGEpOwogICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKF9yZWYyKSB7CiAgICAgIHZhciByZXNwb25zZSA9IF9yZWYyLnJlc3BvbnNlOwogICAgICBjb250ZXh0LmNvbW1pdChNdXRhdGlvbnNUeXBlLlNFVF9FUlJPUiwgcmVzcG9uc2UuZGF0YS5lcnJvcnMpOwogICAgfSk7CiAgfSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIEFjdGlvbnNUeXBlLkxPR09VVCwgZnVuY3Rpb24gKGNvbnRleHQpIHsKICBjb250ZXh0LmNvbW1pdChNdXRhdGlvbnNUeXBlLlBVUkdFX0FVVEgpOwp9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBBY3Rpb25zVHlwZS5SRUdJU1RFUiwgZnVuY3Rpb24gKGNvbnRleHQsIGNyZWRlbnRpYWxzKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIEFwaVNlcnZpY2UucG9zdCgidXNlcnMiLCB7CiAgICAgIHVzZXI6IGNyZWRlbnRpYWxzCiAgICB9KS50aGVuKGZ1bmN0aW9uIChfcmVmMykgewogICAgICB2YXIgZGF0YSA9IF9yZWYzLmRhdGE7CiAgICAgIGNvbnRleHQuY29tbWl0KE11dGF0aW9uc1R5cGUuU0VUX0FVVEgsIGRhdGEudXNlcik7CiAgICAgIHJlc29sdmUoZGF0YSk7CiAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoX3JlZjQpIHsKICAgICAgdmFyIHJlc3BvbnNlID0gX3JlZjQucmVzcG9uc2U7CiAgICAgIGNvbnRleHQuY29tbWl0KE11dGF0aW9uc1R5cGUuU0VUX0VSUk9SLCByZXNwb25zZS5kYXRhLmVycm9ycyk7CiAgICAgIHJlamVjdChyZXNwb25zZSk7CiAgICB9KTsKICB9KTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgQWN0aW9uc1R5cGUuQ0hFQ0tfQVVUSCwgZnVuY3Rpb24gKGNvbnRleHQpIHsKICBpZiAoSnd0U2VydmljZS5nZXRUb2tlbigpKSB7CiAgICAvLyBBcGlTZXJ2aWNlLnNldEhlYWRlcigpOwogICAgQXBpU2VydmljZS5nZXQoInVzZXIiKS50aGVuKGZ1bmN0aW9uIChfcmVmNSkgewogICAgICB2YXIgZGF0YSA9IF9yZWY1LmRhdGE7CiAgICAgIGNvbnRleHQuY29tbWl0KE11dGF0aW9uc1R5cGUuU0VUX0FVVEgsIGRhdGEudXNlcik7CiAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoX3JlZjYpIHsKICAgICAgdmFyIHJlc3BvbnNlID0gX3JlZjYucmVzcG9uc2U7CiAgICAgIGNvbnRleHQuY29tbWl0KE11dGF0aW9uc1R5cGUuU0VUX0VSUk9SLCByZXNwb25zZS5kYXRhLmVycm9ycyk7CiAgICB9KTsKICB9IGVsc2UgewogICAgY29udGV4dC5jb21taXQoTXV0YXRpb25zVHlwZS5QVVJHRV9BVVRIKTsKICB9Cn0pLCBfYWN0aW9ucyk7CnZhciBtdXRhdGlvbnMgPSAoX211dGF0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgTXV0YXRpb25zVHlwZS5TRVRfRVJST1IsIGZ1bmN0aW9uIChzdGF0ZSwgZXJyb3IpIHsKICBzdGF0ZS5lcnJvcnMgPSBlcnJvcjsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBNdXRhdGlvbnNUeXBlLlNFVF9BVVRILCBmdW5jdGlvbiAoc3RhdGUsIHVzZXIpIHsKICBzdGF0ZS5pc0F1dGhlbnRpY2F0ZWQgPSB0cnVlOwogIHN0YXRlLnVzZXIgPSB1c2VyOwogIHN0YXRlLmVycm9ycyA9IHt9OwogIEp3dFNlcnZpY2Uuc2F2ZVRva2VuKHN0YXRlLnVzZXIudG9rZW4pOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE11dGF0aW9uc1R5cGUuUFVSR0VfQVVUSCwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgc3RhdGUuaXNBdXRoZW50aWNhdGVkID0gZmFsc2U7CiAgc3RhdGUudXNlciA9IHt9OwogIHN0YXRlLmVycm9ycyA9IHt9OwogIEp3dFNlcnZpY2UuZGVzdHJveVRva2VuKCk7Cn0pLCBfbXV0YXRpb25zKTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGdldHRlcnM6IGdldHRlcnMKfTs="},{"version":3,"sources":["/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/store/auth.module.ts"],"names":[],"mappings":"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","sourcesContent":["import ApiService from \"@/common/api.service\";\nimport JwtService from \"@/common/jwt.service\";\nimport {\n  ActionsType\n} from \"./actions.type\";\nimport { MutationsType } from \"./mutations.type\";\n\n\nconst state = {\n  errors: null,\n  user: {},\n  isAuthenticated: !!JwtService.getToken()\n};\n\nconst getters = {\n  currentUser(state: any) {\n    return state.user;\n  },\n  isAuthenticated(state: any) {\n    return state.isAuthenticated;\n  }\n};\n\nconst actions = {\n  // Login\n  [ActionsType.LOGIN](context: any, credentials: any) {\n    return new Promise(resolve => {\n      ApiService.post(\"users/login\", { user: credentials })\n        .then(({ data }) => {\n          context.commit(MutationsType.SET_AUTH, data.user);\n          resolve(data);\n        })\n        .catch(({ response }) => {\n          context.commit(MutationsType.SET_ERROR, response.data.errors);\n        });\n    });\n  },\n\n  // Logout\n  [ActionsType.LOGOUT](context: any) {\n    context.commit(MutationsType.PURGE_AUTH);\n  },\n\n  // Register\n  [ActionsType.REGISTER](context: any, credentials: any) {\n    return new Promise((resolve, reject) => {\n      ApiService.post(\"users\", { user: credentials })\n        .then(({ data }) => {\n          context.commit(MutationsType.SET_AUTH, data.user);\n          resolve(data);\n        })\n        .catch(({ response }) => {\n          context.commit(MutationsType.SET_ERROR, response.data.errors);\n          reject(response);\n        });\n    });\n  },\n\n  // Check auth\n  [ActionsType.CHECK_AUTH](context: any) {\n    if (JwtService.getToken()) {\n      // ApiService.setHeader();\n      ApiService.get(\"user\")\n        .then(({ data }: any) => {\n          context.commit(MutationsType.SET_AUTH, data.user);\n        })\n        .catch(({ response }) => {\n          context.commit(MutationsType.SET_ERROR, response.data.errors);\n        });\n    } else {\n      context.commit(MutationsType.PURGE_AUTH);\n    }\n  }\n};\n\nconst mutations = {\n  // Set error\n  [MutationsType.SET_ERROR](state: any, error: any) {\n    state.errors = error;\n  },\n\n  // Set auth\n  [MutationsType.SET_AUTH](state: any, user: any) {\n    state.isAuthenticated = true;\n    state.user = user;\n    state.errors = {};\n    JwtService.saveToken(state.user.token);\n  },\n\n  // Purge auth\n  [MutationsType.PURGE_AUTH](state: any) {\n    state.isAuthenticated = false;\n    state.user = {};\n    state.errors = {};\n    JwtService.destroyToken();\n  }\n};\n\nexport default {\n  state,\n  actions,\n  mutations,\n  getters\n};\n"],"sourceRoot":""}]}
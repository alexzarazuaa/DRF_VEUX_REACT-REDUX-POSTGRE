{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/ts-loader/index.js??ref--14-2!/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/store/bars.module.ts","dependencies":[{"path":"/app/src/store/bars.module.ts","mtime":1613228841293},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7Cgp2YXIgX211dGF0aW9uczsKCmltcG9ydCB7IEJhcnNTZXJ2aWNlIH0gZnJvbSAiQC9jb21tb24vYXBpLnNlcnZpY2UiOwppbXBvcnQgeyBBY3Rpb25zVHlwZSB9IGZyb20gIi4vYWN0aW9ucy50eXBlIjsKaW1wb3J0IHsgTXV0YXRpb25zVHlwZSB9IGZyb20gIi4vbXV0YXRpb25zLnR5cGUiOwpleHBvcnQgdmFyIGluaXRpYWxTdGF0ZSA9IHsKICBCYXJzOiBbXSwKICBJc0xvYWRpbmc6IGZhbHNlLAogIEJhcnNDb3VudDogMAp9Owp2YXIgZ2V0dGVycyA9IHsKICBiYXJzQ291bnQ6IGZ1bmN0aW9uIGJhcnNDb3VudChpbml0aWFsU3RhdGUpIHsKICAgIHJldHVybiBpbml0aWFsU3RhdGUuQmFyc0NvdW50OwogIH0sCiAgYmFyczogZnVuY3Rpb24gYmFycyhpbml0aWFsU3RhdGUpIHsKICAgIHJldHVybiBpbml0aWFsU3RhdGUuQmFyczsKICB9LAogIGlzTG9hZGluZzogZnVuY3Rpb24gaXNMb2FkaW5nKGluaXRpYWxTdGF0ZSkgewogICAgcmV0dXJuIGluaXRpYWxTdGF0ZS5Jc0xvYWRpbmc7CiAgfQp9OwoKdmFyIGFjdGlvbnMgPSBfZGVmaW5lUHJvcGVydHkoe30sIEFjdGlvbnNUeXBlLkZFVENIX0JBUlMsIGZ1bmN0aW9uIChfcmVmLCBwYXJhbXMpIHsKICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgY29tbWl0KE11dGF0aW9uc1R5cGUuRkVUQ0hfU1RBUlQpOwogIHJldHVybiBCYXJzU2VydmljZS5nZXRCYXJzKCkudGhlbihmdW5jdGlvbiAoX3JlZjIpIHsKICAgIHZhciBkYXRhID0gX3JlZjIuZGF0YTsKICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgY29tbWl0KE11dGF0aW9uc1R5cGUuRkVUQ0hfRU5ELCBkYXRhKTsKICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyb3IpIHsKICAgIHRocm93IG5ldyBFcnJvcihlcnJvcik7CiAgfSk7Cn0pOwovKiBlc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246IFsiZXJyb3IiLCB7ICJwcm9wcyI6IGZhbHNlIH1dICovCgoKdmFyIG11dGF0aW9ucyA9IChfbXV0YXRpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBNdXRhdGlvbnNUeXBlLkZFVENIX1NUQVJULCBmdW5jdGlvbiAoc3RhdGUpIHsKICBzdGF0ZS5Jc0xvYWRpbmcgPSB0cnVlOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE11dGF0aW9uc1R5cGUuRkVUQ0hfRU5ELCBmdW5jdGlvbiAoc3RhdGUsIF9yZWYzKSB7CiAgdmFyIGJhcnMgPSBfcmVmMy5iYXJzLAogICAgICBiYXJzQ291bnQgPSBfcmVmMy5iYXJzQ291bnQ7CiAgc3RhdGUuQmFycyA9IGJhcnM7CiAgc3RhdGUuQmFyc0NvdW50ID0gYmFyc0NvdW50OwogIHN0YXRlLmlzTG9hZGluZyA9IGZhbHNlOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE11dGF0aW9uc1R5cGUuVVBEQVRFX0JBUl9JTl9MSVNULCBmdW5jdGlvbiAoc3RhdGUsIGRhdGEpIHsKICBzdGF0ZS5CYXJzID0gc3RhdGUuQmFycy5tYXAoZnVuY3Rpb24gKGJhcikgewogICAgaWYgKGJhci5zbHVnICE9PSBkYXRhLnNsdWcpIHsKICAgICAgcmV0dXJuIGJhcjsKICAgIH0gLy8gYXJ0aWNsZS5mYXZvcml0ZWQgPSBkYXRhLmZhdm9yaXRlZDsKICAgIC8vIGFydGljbGUuZmF2b3JpdGVzQ291bnQgPSBkYXRhLmZhdm9yaXRlc0NvdW50OwoKCiAgICByZXR1cm4gYmFyOwogIH0pOwp9KSwgX211dGF0aW9ucyk7CmV4cG9ydCBkZWZhdWx0IHsKICBpbml0aWFsU3RhdGU6IGluaXRpYWxTdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/store/bars.module.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,WAAT,QAA4B,sBAA5B;AACA,SAAS,WAAT,QAA4B,gBAA5B;AACA,SAAS,aAAT,QAA8B,kBAA9B;AAQA,OAAO,IAAM,YAAY,GAAU;AACjC,EAAA,IAAI,EAAE,EAD2B;AAEjC,EAAA,SAAS,EAAE,KAFsB;AAGjC,EAAA,SAAS,EAAE;AAHsB,CAA5B;AAMP,IAAM,OAAO,GAAG;AACd,EAAA,SAAS,EAAE,mBAAC,YAAD,EAAsB;AAC/B,WAAO,YAAY,CAAC,SAApB;AACD,GAHa;AAId,EAAA,IAAI,EAAE,cAAC,YAAD,EAAsB;AAC1B,WAAO,YAAY,CAAC,IAApB;AACD,GANa;AAQd,EAAA,SAAS,EAAE,mBAAC,YAAD,EAAsB;AAC/B,WAAO,YAAY,CAAC,SAApB;AACD;AAVa,CAAhB;;AAeA,IAAM,OAAO,uBACV,WAAW,CAAC,UADF,kBAC+B,MAD/B,EAC0C;AAAA,MAA1B,MAA0B,QAA1B,MAA0B;AACnD,EAAA,MAAM,CAAC,aAAa,CAAC,WAAf,CAAN;AACA,SAAO,WAAW,CAAC,OAAZ,GACJ,IADI,CACC,iBAAkB;AAAA,QAAf,IAAe,SAAf,IAAe;AACtB,IAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA,IAAA,MAAM,CAAC,aAAa,CAAC,SAAf,EAA0B,IAA1B,CAAN;AACD,GAJI,WAKE,UAAC,KAAD,EAAe;AACpB,UAAM,IAAI,KAAJ,CAAU,KAAV,CAAN;AACD,GAPI,CAAP;AAQD,CAXU,CAAb;AAcA;;;AACA,IAAM,SAAS,iDACZ,aAAa,CAAC,WADF,YACe,KADf,EACyB;AACpC,EAAA,KAAK,CAAC,SAAN,GAAkB,IAAlB;AACD,CAHY,+BAIZ,aAAa,CAAC,SAJF,YAIa,KAJb,SAIiD;AAAA,MAAtB,IAAsB,SAAtB,IAAsB;AAAA,MAAhB,SAAgB,SAAhB,SAAgB;AAC5D,EAAA,KAAK,CAAC,IAAN,GAAa,IAAb;AACA,EAAA,KAAK,CAAC,SAAN,GAAkB,SAAlB;AACA,EAAA,KAAK,CAAC,SAAN,GAAkB,KAAlB;AACD,CARY,+BASZ,aAAa,CAAC,kBATF,YASsB,KATtB,EASkC,IATlC,EAS2C;AACtD,EAAA,KAAK,CAAC,IAAN,GAAa,KAAK,CAAC,IAAN,CAAW,GAAX,CAAe,UAAC,GAAD,EAAa;AACvC,QAAI,GAAG,CAAC,IAAJ,KAAa,IAAI,CAAC,IAAtB,EAA4B;AAC1B,aAAO,GAAP;AACD,KAHsC,CAIvC;AACA;;;AACA,WAAO,GAAP;AACD,GAPY,CAAb;AAQD,CAlBY,cAAf;AAqBA,eAAe;AACb,EAAA,YAAY,EAAZ,YADa;AAEb,EAAA,OAAO,EAAP,OAFa;AAGb,EAAA,OAAO,EAAP,OAHa;AAIb,EAAA,SAAS,EAAT;AAJa,CAAf","sourcesContent":["import { BarsService } from \"@/common/api.service\";\nimport { ActionsType } from \"./actions.type\";\nimport { MutationsType } from \"./mutations.type\";\n\nexport interface State {\n  Bars: any[];\n  IsLoading: boolean;\n  BarsCount: number;\n}\n\nexport const initialState: State = {\n  Bars: [],\n  IsLoading: false,\n  BarsCount: 0\n}\n\nconst getters = {\n  barsCount: (initialState: any) => {\n    return initialState.BarsCount;\n  },\n  bars: (initialState: any) => {\n    return initialState.Bars;\n  },\n\n  isLoading: (initialState: any) => {\n    return initialState.IsLoading;\n  }\n};\n\n\n\nconst actions = {\n  [ActionsType.FETCH_BARS]({ commit }: any, params: any ) {\n    commit(MutationsType.FETCH_START);\n    return BarsService.getBars()\n      .then(({ data }: any) => {\n        console.log(data)\n        commit(MutationsType.FETCH_END, data);\n      })\n      .catch((error: any) => {\n        throw new Error(error);\n      });\n  }\n};\n\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\nconst mutations = {\n  [MutationsType.FETCH_START](state: any) {\n    state.IsLoading = true;\n  },\n  [MutationsType.FETCH_END](state: any, { bars, barsCount }: any) {\n    state.Bars = bars;\n    state.BarsCount = barsCount;\n    state.isLoading = false;\n  },\n  [MutationsType.UPDATE_BAR_IN_LIST](state: any, data: any) {\n    state.Bars = state.Bars.map((bar: any) => {\n      if (bar.slug !== data.slug) {\n        return bar;\n      }\n      // article.favorited = data.favorited;\n      // article.favoritesCount = data.favoritesCount;\n      return bar;\n    });\n  }\n};\n\nexport default {\n  initialState,\n  getters,\n  actions,\n  mutations\n};"],"sourceRoot":""}]}